{
    "name": "my-brain-souvenir",
    "inputs": {
        "nifti": {
            "base": "file",
            "optional": true,
            "description": "Image used to generate brain souvenir. Input image should be structural 3D nifti format. We highly recommend using a pydefaced or brain extracted image to ensure data anonymity. If no image is passed, gear will look for good candidates for image export."
        },
        "key": {
          "base": "api-key",
          "read-only": true
        }
    },
    "config": {
        "gif-mode": {
            "type": "string",
            "default": "normal",
            "enum": ["normal",
                     "pseudocolor",
                     "depth",
                     "rgb"],
            "description": "Gif creation mode. Available options are: (normal|pseudocolor|depth|rgb)"
        },
        "frames-per-second": {
            "type": "integer",
            "default": 18,
            "minimum": 1,
            "maximum": 1000,
            "description": "Frames per second setting for gif image."
        },
        "image-size": {
            "type": "number",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "description": "Image resizing factor (range: 0-1)."
        },
        "colormap": {
            "type": "string",
            "optional": true,
            "enum": ["gray","binary","viridis", "plasma", "inferno", "magma", "cividis","bone",
                      "pink", "spring", "summer", "autumn", "winter", "cool",
                      "Wistia", "hot", "afmhot", "gist_heat", "copper"],
            "description": "Matplotlib colormap for output images. Only used in combination with pseudocolor mode"
        },
        "deface": {
            "default": true,
            "description": "perform pydeface before generating participant images",
            "type": "boolean"
        },
        "brain-extract": {
            "default": false,
            "description": "perform FSL's brain extraction before generating participant images (slower)",
            "type": "boolean"
        },
        "modalities": {
            "type": "string",
            "default": "T1, T2",
            "description": "List of modalities to filter for generating image souvenirs. Multiple modalities may be entered by a comma seperated list (e.g.: T1, T2, 3D)"
        },
        "debug": {
            "default": false,
            "description": "Log debug messages",
            "type": "boolean"
        }
    },
    "custom": {
        "flywheel": {
            "suite": "Tools"
        },
        "gear-builder": {
            "category": "analysis",
            "image": "amhe4269/my-brain-souvenir:0.2.0_inc0.0RC4"
        }
    },
    "author": "Amy Hegarty",
    "maintainer": "Amy Hegarty <amhe4269@colorado.edu",
    "cite": "",
    "capabilities": [],
    "description": "A quick and easy method to generate souvenir brain images for human participants. We strongly recommend consulting with the Institutional Review Board (IRB) before sharing any human subject data. All input images should be first corrected with pydeface or brain extraction to ensure anonymity.",

    "environment": {
        "FLYWHEEL": "/flywheel/v0",
        "GPG_KEY": "E3FF2839C048B25C084DEBE9B26995E310250568",
        "LANG": "C.UTF-8",
        "PATH": "/root/.cache/pypoetry/virtualenvs/my-brain-souvenir-n1iZ4KF1-py3.8/bin:/opt/fsl-6.0.3/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
        "PYTHON_GET_PIP_SHA256": "5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4",
        "PYTHON_GET_PIP_URL": "https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py",
        "PYTHON_PIP_VERSION": "22.0.4",
        "PYTHON_SETUPTOOLS_VERSION": "57.5.0",
        "PYTHON_VERSION": "3.8.14"
    },
    "command": "poetry run python run.py",
    "license": "MIT",
    "label": "My Brain Souvenir",
    "url": "https://github.com/intermountainneuroimaging",
    "source": "https://github.com/intermountainneuroimaging",
    "version": "0.2.0_inc0.0RC4"
}
